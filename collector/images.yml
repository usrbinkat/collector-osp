#!/usr/local/bin/ansible-playbook --inventory=inventory.yaml
- name: '{{ name_vendor }} | Koffer | images.yml' 
  hosts: koffer
  vars_files:
    - 'vars/global.yml'
  vars:
    module: "images"
    ansible_name_module: "{{ ansible_name }} | {{ module }}"
  tasks:
#   - name: '{{ ansible_name_module }} | get_url:url | Place OSP Images Manifest JSON'
#     get_url:
#       url: 'https://registry.redhat.io/v1/search?q=%27rhosp-rhel8%20or%20rhceph-4%20or%20ose-grafana%20or%20ose-prometheus%27'
#       dest: '{{ dir_platform }}/nginx/osp/images.json'
#       mode: 0775
    
    - name: "{{ ansible_name_module }} | command:jq.results.name | Itemize OSP Images List"
      shell: |
        podman search --format \{\{.Name\}\} registry.redhat.io/rhosp | tail -n+2
      register: osp_images_list
    
#   - name: "{{ ansible_name_module }} | command:jq.results.name | Itemize OSP Images List"
#     shell: |
#         jq -r ".results[] .name" {{ dir_platform }}/nginx/osp/images.json
#     register: osp_images_list
    
    - name: '{{ ansible_name_module }} | file:directory | Create mirror artifact directories'
      file:
        path: "{{ dir_platform }}/mirror"
        state: directory
    
    - name: '{{ ansible_name_module }} | shell:skopeo.sync | Sync OSP Container Images'
      shell:
            skopeo sync --dest-tls-verify=false --src docker --dest docker registry.redhat.io/{{ item }} localhost:5000/openstack
      with_items:
        - '{{ osp_images_list.stdout_lines }}'
     
  ######### Skopeo Copy Images to Registry
  # - name: '{{ ansible_name_module }} | shell:skopeo.copy | Sync content from quay.io'
  #   shell: |
  #       for i in $(cat /var/lib/koffer/release.list); do \
  #         skopeo copy docker://quay.io/$i \
  #         docker://localhost:5000/openshift-release-dev/$i ; \
  #       done
  #   when: image_mirror_utility == "skopeo"
  ####### Block Conditionals
